# apiVersion: gateway.networking.k8s.io/v1
# kind: GatewayClass
# metadata:
#   name: envoy-gateway
# spec:
#   controllerName: gateway.envoyproxy.io/gatewayclass-controller
# ---
# apiVersion: gateway.networking.k8s.io/v1
# kind: Gateway
# metadata:
#   name: envoy-gateway
# spec:
#   gatewayClassName: envoy-gateway
#   listeners:
#     - name: http
#       protocol: HTTP
#       port: 80

# # Deployment 1
# ---
# apiVersion: v1
# kind: ServiceAccount
# metadata:
#   name: backend

# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: backend
#   labels:
#     app: backend
#     service: backend
# spec:
#   ports:
#     - name: http
#       port: 3000
#       targetPort: 3000
#   selector:
#     app: backend

# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: backend
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: backend
#       version: v1
#   template:
#     metadata:
#       labels:
#         app: backend
#         version: v1
#     spec:
#       serviceAccountName: backend
#       containers:
#         - image: gcr.io/k8s-staging-ingressconformance/echoserver:v20221109-7ee2f3e
#           imagePullPolicy: IfNotPresent
#           name: backend
#           ports:
#             - containerPort: 3000
#           env:
#             - name: POD_NAME
#               valueFrom:
#                 fieldRef:
#                   fieldPath: metadata.name
#             - name: NAMESPACE
#               valueFrom:
#                 fieldRef:
#                   fieldPath: metadata.namespace
# ---
# apiVersion: gateway.networking.k8s.io/v1
# kind: HTTPRoute
# metadata:
#   name: backend
# spec:
#   parentRefs:
#     - name: envoy-gateway
#   hostnames:
#     - backend.omes.io
#   rules:
#     - backendRefs:
#         - group: ""
#           kind: Service
#           name: backend
#           port: 3000
#           weight: 1
#       matches:
#         - path:
#             type: PathPrefix
#             value: /
